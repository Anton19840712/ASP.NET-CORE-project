// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Web.DAL.Models;

namespace Web.DAL.Migrations
{
    [DbContext(typeof(AppIdentityDbContext))]
    [Migration("20210607140943_AdditionalProductColumn")]
    partial class AdditionalProductColumn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Web.DAL.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Web.DAL.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Background")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Category");

                    b.HasIndex("DateCreated");

                    b.HasIndex("Name");

                    b.HasIndex("Rating");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aab226a8-278a-40ed-a702-c9af5a47cb01"),
                            Background = "BackLink1",
                            Category = 11,
                            Count = 2,
                            DateCreated = new DateTime(2021, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Logo = "LogoLink1",
                            Name = "Wii Sports",
                            Price = 16.600000000000001,
                            Rating = 1
                        },
                        new
                        {
                            Id = new Guid("12087e0a-e4e7-4675-bf0b-a2c08ac9f14a"),
                            Background = "BackLink2",
                            Category = 5,
                            Count = 23,
                            DateCreated = new DateTime(2015, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Logo = "LogoLink2",
                            Name = "Super Mario Bros",
                            Price = 37.600000000000001,
                            Rating = 2
                        },
                        new
                        {
                            Id = new Guid("4f03c92b-01bc-4ea8-9b4c-63be3b4f474a"),
                            Background = "BackLink3",
                            Category = 7,
                            Count = 7,
                            DateCreated = new DateTime(2017, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Logo = "LogoLink3",
                            Name = "Mario Kart Wii",
                            Price = 136.59999999999999,
                            Rating = 3
                        },
                        new
                        {
                            Id = new Guid("a6cc29ab-ef03-49e8-ba04-372f4bcd1e46"),
                            Background = "BackLink4",
                            Category = 11,
                            Count = 4,
                            DateCreated = new DateTime(2020, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Logo = "LogoLink4",
                            Name = "Wii Sports Resort",
                            Price = 326.60000000000002,
                            Rating = 4
                        },
                        new
                        {
                            Id = new Guid("6d97aac8-4cdb-4b1a-aba7-5a754afb35c8"),
                            Background = "BackLink5",
                            Category = 6,
                            Count = 7,
                            DateCreated = new DateTime(2015, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Logo = "LogoLink5",
                            Name = "Tetras",
                            Price = 365.60000000000002,
                            Rating = 5
                        },
                        new
                        {
                            Id = new Guid("559c8d6d-84c9-4e56-a248-800424cbebf6"),
                            Background = "BackLink6",
                            Category = 4,
                            Count = 4,
                            DateCreated = new DateTime(2014, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Logo = "LogoLink6",
                            Name = "Wii Play",
                            Price = 3.6000000000000001,
                            Rating = 1
                        },
                        new
                        {
                            Id = new Guid("32e0cd32-d696-4f85-aec5-927fca521362"),
                            Background = "BackLink7",
                            Category = 9,
                            Count = 7,
                            DateCreated = new DateTime(2013, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Logo = "LogoLink7",
                            Name = "Duck Hunt",
                            Price = 7.5999999999999996,
                            Rating = 2
                        },
                        new
                        {
                            Id = new Guid("a2fb3a28-ef07-40c6-bd77-bbb0fe3d5906"),
                            Background = "BackLink8",
                            Category = 10,
                            Count = 99,
                            DateCreated = new DateTime(2011, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Logo = "LogoLink8",
                            Name = "Nintendo",
                            Price = 77.599999999999994,
                            Rating = 3
                        },
                        new
                        {
                            Id = new Guid("caec9e49-a98f-4f04-812c-15eddbf47960"),
                            Background = "BackLink9",
                            Category = 7,
                            Count = 4,
                            DateCreated = new DateTime(2010, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Logo = "LogoLink9",
                            Name = "Mario Kart DS",
                            Price = 377.60000000000002,
                            Rating = 4
                        },
                        new
                        {
                            Id = new Guid("3f07c4d4-8a9c-43a3-8e8b-f3647c74bcaa"),
                            Background = "BackLink10",
                            Category = 11,
                            Count = 3,
                            DateCreated = new DateTime(2009, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Logo = "LogoLink10",
                            Name = "Wii Fit",
                            Price = 344.60000000000002,
                            Rating = 5
                        },
                        new
                        {
                            Id = new Guid("b3b3d1bc-d639-4097-aa0d-535a089631ac"),
                            Background = "BackLink11",
                            Category = 11,
                            Count = 34,
                            DateCreated = new DateTime(2008, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Logo = "LogoLink11",
                            Name = "Wii Fit Plus",
                            Price = 30.600000000000001,
                            Rating = 1
                        },
                        new
                        {
                            Id = new Guid("52e4fed9-d58e-442f-8337-8d488c98d494"),
                            Background = "BackLink12",
                            Category = 4,
                            Count = 55,
                            DateCreated = new DateTime(2007, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Logo = "LogoLink12",
                            Name = "Adventures",
                            Price = 34.600000000000001,
                            Rating = 1
                        },
                        new
                        {
                            Id = new Guid("b1f971c3-172f-4a23-8e54-6735720df803"),
                            Background = "BackLink13",
                            Category = 1,
                            Count = 6,
                            DateCreated = new DateTime(2006, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Logo = "LogoLink13",
                            Name = "Grand Theft Auto V",
                            Price = 365.60000000000002,
                            Rating = 2
                        },
                        new
                        {
                            Id = new Guid("1c13608e-7207-42e1-941c-f5ee41bc1e14"),
                            Background = "BackLink14",
                            Category = 5,
                            Count = 6,
                            DateCreated = new DateTime(2005, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Logo = "LogoLink14",
                            Name = "Super Mario World",
                            Price = 346.60000000000002,
                            Rating = 3
                        },
                        new
                        {
                            Id = new Guid("62ce43b3-49ea-4b27-b264-a9292ae50044"),
                            Background = "BackLink15",
                            Category = 5,
                            Count = 2,
                            DateCreated = new DateTime(2004, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Logo = "LogoLink15",
                            Name = "Super Mario Land",
                            Price = 34.600000000000001,
                            Rating = 5
                        },
                        new
                        {
                            Id = new Guid("a4242b5d-d73e-416c-bb8d-75ed3f24f7d1"),
                            Background = "BackLink16",
                            Category = 1,
                            Count = 77,
                            DateCreated = new DateTime(2003, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Logo = "LogoLink16",
                            Name = "Grand Theft Auto V",
                            Price = 386.60000000000002,
                            Rating = 1
                        },
                        new
                        {
                            Id = new Guid("1b33eab9-456b-4505-bce7-95572f714d1e"),
                            Background = "BackLink17",
                            Category = 7,
                            Count = 27,
                            DateCreated = new DateTime(2002, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Logo = "LogoLink17",
                            Name = "Mario Kart 7",
                            Price = 6.5999999999999996,
                            Rating = 2
                        },
                        new
                        {
                            Id = new Guid("1ef93a85-6bc4-4c07-b137-e9c2f3bce13b"),
                            Background = "BackLink18",
                            Category = 9,
                            Count = 42,
                            DateCreated = new DateTime(2001, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Logo = "LogoLink18",
                            Name = "Halo 3",
                            Price = 346.60000000000002,
                            Rating = 3
                        },
                        new
                        {
                            Id = new Guid("7940ac6f-60e5-431a-b311-d9a286a07544"),
                            Background = "BackLink19",
                            Category = 1,
                            Count = 25,
                            DateCreated = new DateTime(2000, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Logo = "LogoLink19",
                            Name = "Grand Theft Auto V",
                            Price = 37.600000000000001,
                            Rating = 4
                        },
                        new
                        {
                            Id = new Guid("2de37f54-4470-48a4-8d1b-86684fceb92e"),
                            Background = "BackLink20",
                            Category = 5,
                            Count = 25,
                            DateCreated = new DateTime(1999, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Logo = "LogoLink20",
                            Name = "Super Mario 64",
                            Price = 32.600000000000001,
                            Rating = 5
                        },
                        new
                        {
                            Id = new Guid("7f67a190-16d5-43b3-95d0-d229bca5347b"),
                            Background = "BackLink21",
                            Category = 4,
                            Count = 2,
                            DateCreated = new DateTime(1998, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Logo = "LogoLink21",
                            Name = "Gran Tur 4",
                            Price = 376.60000000000002,
                            Rating = 1
                        },
                        new
                        {
                            Id = new Guid("6b7fa717-903e-4e61-ac77-6d67397863c2"),
                            Background = "BackLink22",
                            Category = 7,
                            Count = 24,
                            DateCreated = new DateTime(1997, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Logo = "LogoLink22",
                            Name = "Super Mario Galaxy",
                            Price = 2.6000000000000001,
                            Rating = 5
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Web.DAL.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Web.DAL.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Web.DAL.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Web.DAL.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
