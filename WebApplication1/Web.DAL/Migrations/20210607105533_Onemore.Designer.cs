// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Web.DAL.Models;

namespace Web.DAL.Migrations
{
    [DbContext(typeof(AppIdentityDbContext))]
    [Migration("20210607105533_Onemore")]
    partial class Onemore
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Web.DAL.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Web.DAL.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Category");

                    b.HasIndex("DateCreated");

                    b.HasIndex("Name");

                    b.HasIndex("Rating");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e154e724-4820-4a96-96f7-89a09943d2d9"),
                            Category = 11,
                            DateCreated = new DateTime(2021, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Wii Sports",
                            Rating = 82
                        },
                        new
                        {
                            Id = new Guid("61dfdb1a-08e3-475b-97b9-fa0d7432338f"),
                            Category = 5,
                            DateCreated = new DateTime(2015, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Super Mario Bros",
                            Rating = 41
                        },
                        new
                        {
                            Id = new Guid("c42ef01b-43c3-49c5-91d9-bc8145e0253c"),
                            Category = 7,
                            DateCreated = new DateTime(2017, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mario Kart Wii",
                            Rating = 35
                        },
                        new
                        {
                            Id = new Guid("508559f4-28a9-49ae-a389-f766f7c65bbe"),
                            Category = 11,
                            DateCreated = new DateTime(2020, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Wii Sports Resort",
                            Rating = 33
                        },
                        new
                        {
                            Id = new Guid("c0112e13-5ef5-48dd-b170-66b943cb242d"),
                            Category = 6,
                            DateCreated = new DateTime(2015, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tetras",
                            Rating = 31
                        },
                        new
                        {
                            Id = new Guid("13ebfdf8-e972-4c3a-9c42-8c098cceee9f"),
                            Category = 4,
                            DateCreated = new DateTime(2014, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Wii Play",
                            Rating = 29
                        },
                        new
                        {
                            Id = new Guid("196bcaaa-b382-47f9-8528-c6369287220a"),
                            Category = 9,
                            DateCreated = new DateTime(2013, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Duck Hunt",
                            Rating = 28
                        },
                        new
                        {
                            Id = new Guid("5985416a-13e7-472f-9d9d-176ea952487e"),
                            Category = 10,
                            DateCreated = new DateTime(2011, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nintendo",
                            Rating = 25
                        },
                        new
                        {
                            Id = new Guid("18c178c6-5262-4db5-b426-b89c86312c8c"),
                            Category = 7,
                            DateCreated = new DateTime(2010, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mario Kart DS",
                            Rating = 24
                        },
                        new
                        {
                            Id = new Guid("3ff88bf4-39a0-47e4-b317-9c04a1c6b7fb"),
                            Category = 11,
                            DateCreated = new DateTime(2009, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Wii Fit",
                            Rating = 23
                        },
                        new
                        {
                            Id = new Guid("734293f2-e3d4-45c5-882f-12b0f1889122"),
                            Category = 11,
                            DateCreated = new DateTime(2008, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Wii Fit Plus",
                            Rating = 22
                        },
                        new
                        {
                            Id = new Guid("af59aca6-d151-4879-96d8-2f6bf95c2fd8"),
                            Category = 4,
                            DateCreated = new DateTime(2007, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adventures",
                            Rating = 22
                        },
                        new
                        {
                            Id = new Guid("6058e0e7-52eb-494f-bc4f-f36f8555bc8b"),
                            Category = 1,
                            DateCreated = new DateTime(2006, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Grand Theft Auto V",
                            Rating = 21
                        },
                        new
                        {
                            Id = new Guid("59295032-71ac-41e1-820c-3b8cdabbe137"),
                            Category = 5,
                            DateCreated = new DateTime(2005, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Super Mario World",
                            Rating = 22
                        },
                        new
                        {
                            Id = new Guid("705ea3b7-b76e-4add-b28c-edbed09fbf42"),
                            Category = 5,
                            DateCreated = new DateTime(2004, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Super Mario Land",
                            Rating = 22
                        },
                        new
                        {
                            Id = new Guid("98b724c9-7338-4c7c-90ae-8942f8a66b44"),
                            Category = 1,
                            DateCreated = new DateTime(2003, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Grand Theft Auto V",
                            Rating = 22
                        },
                        new
                        {
                            Id = new Guid("794fa56f-8b00-4e22-974f-6e5f92bf684e"),
                            Category = 7,
                            DateCreated = new DateTime(2002, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mario Kart 7",
                            Rating = 21
                        },
                        new
                        {
                            Id = new Guid("7c36e0ba-10a4-48df-bbe8-04cb09b934b8"),
                            Category = 9,
                            DateCreated = new DateTime(2001, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Halo 3",
                            Rating = 18
                        },
                        new
                        {
                            Id = new Guid("61bf2e55-dee8-49c4-a8b3-c91301f6f159"),
                            Category = 1,
                            DateCreated = new DateTime(2000, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Grand Theft Auto V",
                            Rating = 16
                        },
                        new
                        {
                            Id = new Guid("9d2f4d2b-a39b-4df0-b148-8947f2a5b496"),
                            Category = 5,
                            DateCreated = new DateTime(1999, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Super Mario 64",
                            Rating = 11
                        },
                        new
                        {
                            Id = new Guid("11ae60ea-217e-447b-a790-3cfc76353551"),
                            Category = 4,
                            DateCreated = new DateTime(1998, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gran Tur 4",
                            Rating = 11
                        },
                        new
                        {
                            Id = new Guid("fdf006c2-db9e-45d9-9a66-8a852e986c76"),
                            Category = 7,
                            DateCreated = new DateTime(1997, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Super Mario Galaxy",
                            Rating = 11
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Web.DAL.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Web.DAL.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Web.DAL.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Web.DAL.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
